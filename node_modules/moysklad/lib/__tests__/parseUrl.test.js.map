{"version":3,"sources":["../../src/__tests__/parseUrl.test.js"],"names":["test","require","Moysklad","t","ms","getOptions","endpoint","api","apiVersion","common","deepEqual","parseUrl","path","query","a","b","c","filter","end"],"mappings":"AAAA;;;;AAEA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;AACA,MAAMC,WAAWD,QAAQ,IAAR,CAAjB;;AAEAD,KAAK,0BAAL,EAAiCG,KAAK;AACpC,MAAIC,KAAKF,UAAT;;AADoC,uBAEAE,GAAGC,UAAH,EAFA;;AAAA,MAE9BC,QAF8B,kBAE9BA,QAF8B;AAAA,MAEpBC,GAFoB,kBAEpBA,GAFoB;AAAA,MAEfC,UAFe,kBAEfA,UAFe;;;AAIpC,MAAIC,SAAS,EAAEH,kBAAF,EAAYC,QAAZ,EAAiBC,sBAAjB,EAAb;;AAEAL,IAAEO,SAAF,CAAYN,GAAGO,QAAH,CAAY,yDAAZ,CAAZ,eACKF,MADL;AAEEG,UAAM,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,CAFR;AAGEC,WAAO;AAHT;;AAMAV,IAAEO,SAAF,CAAYN,GAAGO,QAAH,CAAY,qEACtB,sDADU,CAAZ,eAEKF,MAFL;AAGEG,UAAM,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,CAHR;AAIEC,WAAO;AACLC,SAAG,CAAC,CAAD,EAAI,KAAJ,CADE;AAELC,SAAG,CAFE;AAGLC,SAAG,IAHE;AAIL,iBAAW,KAJN;AAKLC,cAAQ;AACR;AACA;AACA;AACA;AACA;AAVK;AAJT;;AAkBAd,IAAEO,SAAF,CAAYN,GAAGO,QAAH,CAAY,gBAAZ,CAAZ,eACKF,MADL;AAEEG,UAAM,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,CAFR;AAGEC,WAAO;AAHT;;AAMAV,IAAEO,SAAF,CAAYN,GAAGO,QAAH,CAAY,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,CAAZ,CAAZ,eACKF,MADL;AAEEG,UAAM,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,CAFR;AAGEC,WAAO;AAHT;;AAMAV,IAAEe,GAAF;AACD,CA3CD","file":"parseUrl.test.js","sourcesContent":["'use strict'\n\nconst test = require('blue-tape')\nconst Moysklad = require('..')\n\ntest('Moysklad#parseUrl method', t => {\n  let ms = Moysklad()\n  let { endpoint, api, apiVersion } = ms.getOptions()\n\n  let common = { endpoint, api, apiVersion }\n\n  t.deepEqual(ms.parseUrl('https://online.moysklad.ru/api/remap/1.1/path/to/my/res'), {\n    ...common,\n    path: ['path', 'to', 'my', 'res'],\n    query: {}\n  })\n\n  t.deepEqual(ms.parseUrl('https://online.moysklad.ru/api/remap/1.1/path/to/my/res?a=1&b=2&' +\n    'a=one&c=&foo.bar=baz&filter=name%3Dfoo%3Bvalue%3Dbar'), {\n    ...common,\n    path: ['path', 'to', 'my', 'res'],\n    query: {\n      a: [1, 'one'],\n      b: 2,\n      c: null,\n      'foo.bar': 'baz',\n      filter: 'name=foo;value=bar'\n      // TODO Filter parsing\n      // filter: {\n      //   name: 'foo',\n      //   value: 'bar'\n      // }\n    }\n  })\n\n  t.deepEqual(ms.parseUrl('path/to/my/res'), {\n    ...common,\n    path: ['path', 'to', 'my', 'res'],\n    query: {}\n  })\n\n  t.deepEqual(ms.parseUrl(['path', '/to//my/', 'res//']), {\n    ...common,\n    path: ['path', 'to', 'my', 'res'],\n    query: {}\n  })\n\n  t.end()\n})\n"]}