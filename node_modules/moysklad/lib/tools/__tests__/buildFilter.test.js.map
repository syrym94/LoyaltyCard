{"version":3,"sources":["../../../src/tools/__tests__/buildFilter.test.js"],"names":["test","require","buildFilter","t","ok","equals","end","filter","name","value","moment","Date","some","other","deepEqual","join","deep","tow","many","$eq","start","$st","$et","cont","$contains","$gt","num","$gte","$lt","$lte","$ne","$exists","$in","notMany","$nin","empty","$and","$not","fantom","id","sub","throws","foo","undefined","Symbol","a"],"mappings":"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","file":"buildFilter.test.js","sourcesContent":["'use strict'\n\nconst test = require('blue-tape')\nconst buildFilter = require('../buildFilter')\n\ntest('buildFilter', t => {\n  t.ok(buildFilter)\n  t.equals(typeof buildFilter, 'function', 'should to be function')\n  t.end()\n})\n\ntest('buildFilter with simple filter', t => {\n  let filter = {\n    name: 'foo',\n    value: 3,\n    moment: new Date('2017-01-09T19:15:06.556Z'),\n    some: null,\n    other: true\n  }\n\n  t.deepEqual(buildFilter(filter), [\n    'moment=2017-01-09 22:15:06',\n    'name=foo',\n    'other=true',\n    'some=',\n    'value=3'\n  ].join(';'))\n\n  t.end()\n})\n\ntest('buildFilter with simple deep and many condition filter', t => {\n  let filter = {\n    name: 'foo',\n    value: 0,\n    moment: new Date('2017-01-09T19:15:06.556Z'),\n    'deep.one': 5,\n    deep: {\n      tow: false\n    },\n    many: [1, 'baz']\n  }\n\n  t.deepEqual(buildFilter(filter), [\n    'deep.one=5',\n    'deep.tow=false',\n    'many=1',\n    'many=baz',\n    'moment=2017-01-09 22:15:06',\n    'name=foo',\n    'value=0'\n  ].join(';'))\n\n  t.end()\n})\n\ntest('buildFilter with mogo query comparison selectors', t => {\n  let filter = {\n    name: {\n      $eq: 'foo'\n    },\n    start: {\n      $st: 'prfx'\n    },\n    end: {\n      $et: 'psfx'\n    },\n    cont: {\n      $contains: 'str'\n    },\n    value: {\n      $gt: 5\n    },\n    num: {\n      $gte: 5, $lt: 10\n    },\n    moment: {\n      $lte: new Date('2017-01-09T19:15:06.556Z')\n    },\n    deep: {\n      tow: {\n        $ne: 'bar'\n      }\n    },\n    many: {\n      $exists: true,\n      $in: [1, 'baz']\n    },\n    notMany: {\n      $nin: [3, 6],\n      $gt: 0\n    },\n    empty: {\n      $exists: false\n    }\n  }\n\n  t.deepEqual(buildFilter(filter), [\n    'cont~str',\n    'deep.tow!=bar',\n    'empty=',\n    'end=~psfx',\n    'many!=',\n    'many=1',\n    'many=baz',\n    'moment<=2017-01-09 22:15:06',\n    'name=foo',\n    'notMany!=3',\n    'notMany!=6',\n    'notMany>0',\n    'num<10',\n    'num>=5',\n    'start~=prfx',\n    'value>5'\n  ].join(';'))\n\n  t.end()\n})\n\ntest('buildFilter with mogo query logical selectors', t => {\n  let filter = {\n    name: {\n      $and: [\n        { $eq: 'foo' },\n        { $eq: 'bar' }\n      ]\n    },\n    value: {\n      $not: {\n        $eq: 10,\n        $in: [5, 6]\n      }\n    },\n    fantom: {\n      $not: {\n        $exists: true\n      }\n    }\n  }\n\n  t.deepEqual(buildFilter(filter), [\n    'fantom=',\n    'name=bar',\n    'name=foo',\n    'value!=10',\n    'value!=5',\n    'value!=6'\n  ].join(';'))\n\n  t.end()\n})\n\ntest('buildFilter with query selectors combined with sub fields', t => {\n  let filter = {\n    id: 5,\n    name: {\n      $eq: 'foo',\n      sub: 'bar'\n    }\n  }\n\n  t.deepEqual(buildFilter(filter), 'id=5;name.sub=bar;name=foo')\n\n  t.end()\n})\n\ntest('buildFilter errors', t => {\n  t.throws(() => {\n    buildFilter()\n  }, /filter must to be an object/)\n\n  t.throws(() => {\n    buildFilter({ foo: undefined })\n  }, /filter \"foo\" key value is undefined/)\n\n  t.throws(() => {\n    buildFilter({ foo: Symbol('foo') })\n  }, /filter \"foo\" key value is incorrect/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $eq: { a: 1 } } })\n  }, /\\$eq: value must to be string, number, date or null/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $in: { a: 1 } } })\n  }, /\\$in: selector value must to be an array/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $and: { a: 1 } } })\n  }, /\\$and: selector value must to be an array/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $not: 3 } })\n  }, /\\$not: selector value must to be an object/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $not: { $st: 'start' } } })\n  }, /\\$st not support negation/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $not: { $et: 'start' } } })\n  }, /\\$et not support negation/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $not: { $contains: 'start' } } })\n  }, /\\$contains not support negation/)\n\n  t.throws(() => {\n    buildFilter({ foo: { $exists: 'boo' } })\n  }, /\\$exists: selector value must to be boolean/)\n\n  t.end()\n})\n\n// debugger\n"]}