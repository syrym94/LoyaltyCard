{"version":3,"sources":["../src/matchers.js"],"names":["UUID_REGEX","urlMatcher","url","substring","uuidMatcher","uuid","test","module","exports","ent","id","meta","type","col","href","size"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,6EAAnB;;AAEA,MAAMC,aAAaC,OAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,IAAIC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,UAA7E;AACA,MAAMC,cAAcC,QAAQ,OAAOA,IAAP,KAAgB,QAAhB,IAA4BL,WAAWM,IAAX,CAAgBD,IAAhB,CAAxD;;AAEA;AACAE,OAAOC,OAAP,GAAiB;AACf,YAAUC,OAAO,CAAC,EAAEA,OAAOA,IAAIC,EAAX,IAAiBN,YAAYK,IAAIC,EAAhB,CAAjB,IAAwCD,IAAIE,IAA5C,IAAoDF,IAAIE,IAAJ,CAASC,IAA/D,CADH;AAEf,UAAQR,WAFO;AAGf,SAAOH,UAHQ;AAIf;AACA;AACA;AACA;AACA;AACA,yBAAuBY,OAAO,CAAC,EAAEA,OAAOA,IAAIF,IAAX,IAAmBE,IAAIF,IAAJ,CAASC,IAA5B,IAAoCX,WAAWY,IAAIF,IAAJ,CAASG,IAApB,CAApC,IAC/B,OAAOD,IAAIF,IAAJ,CAASI,IAAhB,KAAyB,QADI;AAThB,CAAjB;;AAaA","file":"matchers.js","sourcesContent":["'use strict'\n\nconst UUID_REGEX = /[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/\n\nconst urlMatcher = url => typeof url === 'string' && url.substring(0, 8) === 'https://'\nconst uuidMatcher = uuid => typeof uuid === 'string' && UUID_REGEX.test(uuid)\n\n// TODO Убедиться что указан необходимый минимум полей для сущностей\nmodule.exports = {\n  'entity': ent => !!(ent && ent.id && uuidMatcher(ent.id) && ent.meta && ent.meta.type),\n  'uuid': uuidMatcher,\n  'url': urlMatcher,\n  // 'uuid/uuid': id => {\n  //   if (typeof id !== 'string') { return false }\n  //   let [dicId, entId] = id.split('/')\n  //   return UUID_REGEX.test(dicId) && UUID_REGEX.test(entId)\n  // },\n  'Moysklad.Collection': col => !!(col && col.meta && col.meta.type && urlMatcher(col.meta.href) &&\n    typeof col.meta.size === 'number')\n}\n\n// TODO Проверка типов \"Moysklad.\" на основании модели\n"]}