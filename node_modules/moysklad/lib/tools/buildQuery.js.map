{"version":3,"sources":["../../src/tools/buildQuery.js"],"names":["buildFilter","require","isPlainObject","addQueryPart","res","key","val","push","undefined","indexOf","TypeError","encodeURIComponent","module","exports","buildQuery","query","Object","keys","reduce","addPart","filter","Array","forEach","map","kv","join"],"mappings":"AAAA;;AAEA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;AACA,MAAMC,gBAAgBD,QAAQ,iBAAR,CAAtB;;AAEA,MAAME,eAAe,CAACC,GAAD,EAAMC,GAAN,KAAcC,OAAO;AACxC,MAAIA,QAAQ,IAAZ,EAAkB;AAChBF,QAAIG,IAAJ,CAAS,CAACF,GAAD,EAAM,EAAN,CAAT;AACD,GAFD,MAEO,IAAIC,QAAQE,SAAZ,EAAuB;AAC5B,WAAOA,SAAP;AACD,GAFM,MAEA,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgCC,OAAhC,CAAwC,OAAOH,GAA/C,MAAwD,CAAC,CAA7D,EAAgE;AACrE,UAAM,IAAII,SAAJ,CACJ,2EADI,CAAN;AAED,GAHM,MAGA;AACLN,QAAIG,IAAJ,CAAS,CAACF,GAAD,EAAMM,mBAAmBL,GAAnB,CAAN,CAAT;AACD;AACF,CAXD;;AAaAM,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAC3C,SAAOC,OAAOC,IAAP,CAAYF,KAAZ,EACJG,MADI,CACG,CAACd,GAAD,EAAMC,GAAN,KAAc;AACpB,UAAMc,UAAUhB,aAAaC,GAAb,EAAkBC,GAAlB,CAAhB;;AAEA,YAAQ,IAAR;AACE,WAAKA,QAAQ,QAAb;AACE,YAAIH,cAAca,MAAMK,MAApB,CAAJ,EAAiCD,QAAQnB,YAAYe,MAAMK,MAAlB,CAAR,EAAjC,KACK,IAAI,OAAOL,MAAMK,MAAb,KAAwB,QAA5B,EAAsCD,QAAQJ,MAAMK,MAAd,EAAtC,KACA,MAAM,IAAIV,SAAJ,CAAc,0CAAd,CAAN;AACL;;AAEF,WAAKK,MAAMV,GAAN,aAAsBgB,KAA3B;AACEN,cAAMV,GAAN,EAAWiB,OAAX,CAAmBH,OAAnB;AACA;;AAEF;AACEA,gBAAQJ,MAAMV,GAAN,CAAR;AAZJ;;AAeA,WAAOD,GAAP;AACD,GApBI,EAoBF,EApBE,EAqBJmB,GArBI,CAqBAC,MAAO,GAAEA,GAAG,CAAH,CAAM,IAAGA,GAAG,CAAH,CAAM,EArBxB,EAsBJC,IAtBI,CAsBC,GAtBD,CAAP;AAuBD,CAxBD","file":"buildQuery.js","sourcesContent":["'use strict'\n\nconst buildFilter = require('./buildFilter')\nconst isPlainObject = require('./isPlainObject')\n\nconst addQueryPart = (res, key) => val => {\n  if (val === null) {\n    res.push([key, ''])\n  } else if (val === undefined) {\n    return undefined\n  } else if (['string', 'number', 'boolean'].indexOf(typeof val) === -1) {\n    throw new TypeError(\n      'url query key value must to be string, number, boolean, null or undefined')\n  } else {\n    res.push([key, encodeURIComponent(val)])\n  }\n}\n\nmodule.exports = function buildQuery (query) {\n  return Object.keys(query)\n    .reduce((res, key) => {\n      const addPart = addQueryPart(res, key)\n\n      switch (true) {\n        case key === 'filter':\n          if (isPlainObject(query.filter)) addPart(buildFilter(query.filter))\n          else if (typeof query.filter === 'string') addPart(query.filter)\n          else throw new TypeError('query.filter must to be string or object')\n          break\n\n        case query[key] instanceof Array:\n          query[key].forEach(addPart)\n          break\n\n        default:\n          addPart(query[key])\n      }\n\n      return res\n    }, [])\n    .map(kv => `${kv[0]}=${kv[1]}`)\n    .join('&')\n}\n"]}